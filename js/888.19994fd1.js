"use strict";(self["webpackChunktest_project"]=self["webpackChunktest_project"]||[]).push([[888],{8888:function(e,t,s){s.r(t),s.d(t,{default:function(){return y}});var r=s(6252),n=s(9963),a=s(3577);const i={name:"register-form"},u={class:"mb-3"},o=(0,r._)("label",{for:"username"},"Username: ",-1),p=["required","placeholder"],l={class:"mb-3"},m=(0,r._)("label",{for:"password"},"Password: ",-1),c=["required","placeholder"];function h(e,t,s,h,d,g){return(0,r.wg)(),(0,r.iD)("form",i,[(0,r._)("div",u,[o,(0,r.wy)((0,r._)("input",{type:"text",id:"username","onUpdate:modelValue":t[0]||(t[0]=e=>d.input.username=e),required:d.rule.required,placeholder:d.rule.message},null,8,p),[[n.nr,d.input.username]])]),(0,r._)("div",l,[m,(0,r.wy)((0,r._)("input",{type:"password",id:"password","onUpdate:modelValue":t[1]||(t[1]=e=>d.input.password=e),required:d.rule.required,placeholder:d.rule.message},null,8,c),[[n.nr,d.input.password]])]),(0,r._)("button",{class:"btn btn-outline-dark",type:"submit",onClick:t[2]||(t[2]=(0,n.iM)(((...e)=>g.register&&g.register(...e)),["prevent"]))}," Register "),(0,r._)("h3",null,"Register Output: "+(0,a.zw)(this.output),1)])}s(7658);var d=s(6154),g=s(2721),w={name:"register",data(){return{input:{username:"",password:""},rule:{required:!0,message:"please input data"},output:""}},methods:{registerApi(){console.log("Register"),(0,d.Z)({method:"post",url:"/api/login/CreateNewUser",params:{username:this.input.username,password:this.input.password}}).then((function(e){console.log(e)})).catch((function(e){console.log(e)}))},login(){""!==this.input.username||""!==this.input.username?(this.output="Register complete",this.$store.commit(`auth/${g.vA}`,!0),this.$store.commit(`auth/${g.Wt}`,this.input.username),this.output="Authentication complete.",this.$router.push("/home")):(this.$store.commit(`auth/${g.vA}`,!1),this.output="Username and password can not be empty")},async checkUserNameExist(){return await(0,d.Z)({method:"post",url:"/api/login/CheckUsernameExist",params:{username:this.input.username}}).then((function(e){return console.log("result in func "+e.data),e.data})).catch((function(e){console.log(e)}))},async register(){this.output="";let e=await this.checkUserNameExist();console.log("userNameExist: "+e),e?this.output="Username already exist":""===this.input.username||""===this.input.username?this.output="Username and password can not be empty":(await this.registerApi(),await this.login())}}},f=s(3744);const b=(0,f.Z)(w,[["render",h]]);var y=b}}]);
//# sourceMappingURL=888.19994fd1.js.map