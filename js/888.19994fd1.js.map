{"version":3,"file":"js/888.19994fd1.js","mappings":"+MACQA,KAAK,iB,GACJC,MAAM,Q,GACTC,EAAAA,EAAAA,GAAwC,SAAjCC,IAAI,YAAW,cAAU,G,gCAG7BF,MAAM,Q,GACTC,EAAAA,EAAAA,GAAwC,SAAjCC,IAAI,YAAW,cAAU,G,uEANpCC,EAAAA,EAAAA,IAcO,OAdPC,EAcO,EAbLH,EAAAA,EAAAA,GAGM,MAHNI,EAGM,CAFJC,GAAwC,SACxCL,EAAAA,EAAAA,GAA6H,SAAtHM,KAAK,OAAOC,GAAG,W,qCAAoBC,EAAAA,MAAMC,SAAQ,GAASC,SAAUF,EAAAA,KAAKE,SAAiBC,YAAaH,EAAAA,KAAKI,S,iBAAzEJ,EAAAA,MAAMC,eAElDT,EAAAA,EAAAA,GAGM,MAHNa,EAGM,CAFJC,GAAwC,SACxCd,EAAAA,EAAAA,GAAiI,SAA1HM,KAAK,WAAWC,GAAG,W,qCAAoBC,EAAAA,MAAMO,SAAQ,GAASL,SAAUF,EAAAA,KAAKE,SAAiBC,YAAaH,EAAAA,KAAKI,S,iBAAzEJ,EAAAA,MAAMO,eAEtDf,EAAAA,EAAAA,GAES,UAFDD,MAAM,uBAAuBO,KAAK,SAAcU,QAAK,8BAAUC,EAAAA,UAAAA,EAAAA,YAAAA,IAAQ,eAAE,eAGjFjB,EAAAA,EAAAA,GAA2C,UAAvC,qBAAiB,aAAQkB,QAAM,I,iCAWvC,GACApB,KAAM,WACJqB,OACE,MAAO,CACLC,MAAO,CACLX,SAAU,GACVM,SAAU,IAEZM,KAAM,CACJX,UAAU,EACVE,QAAS,qBAEXM,OAAQ,GAEZ,EACAI,QAAS,CACPC,cACEC,QAAQC,IAAI,aACZC,EAAAA,EAAAA,GAAM,CACJC,OAAQ,OACRC,IAAK,2BACLC,OAAQ,CACNpB,SAAUqB,KAAKV,MAAMX,SACrBM,SAAUe,KAAKV,MAAML,YAEtBgB,MAAK,SAAUC,GAChBR,QAAQC,IAAIO,EACd,IAAGC,OAAM,SAAUC,GACjBV,QAAQC,IAAIS,EACd,GACF,EACAC,QAE8B,KAAxBL,KAAKV,MAAMX,UAA2C,KAAxBqB,KAAKV,MAAMX,UAC3CqB,KAAKZ,OAAS,oBAEdY,KAAKM,OAAOC,OAAQ,QAAOC,EAAAA,MAAsB,GACjDR,KAAKM,OAAOC,OAAQ,QAAOE,EAAAA,KAAgBT,KAAKV,MAAMX,UACtDqB,KAAKZ,OAAS,2BACdY,KAAKU,QAAQC,KAAK,WAElBX,KAAKM,OAAOC,OAAQ,QAAOC,EAAAA,MAAsB,GACjDR,KAAKZ,OAAS,yCAElB,EACAwB,2BACE,aAAahB,EAAAA,EAAAA,GAAM,CACjBC,OAAQ,OACRC,IAAK,gCACLC,OAAQ,CACNpB,SAAUqB,KAAKV,MAAMX,YAEtBsB,MAAK,SAAUC,GAEhB,OADAR,QAAQC,IAAI,kBAAoBO,EAASb,MAClCa,EAASb,IAClB,IAAGc,OAAM,SAAUC,GACjBV,QAAQC,IAAIS,EACd,GACF,EACAQ,iBACEZ,KAAKZ,OAAS,GACd,IAAIyB,QAAsBb,KAAKc,qBAC/BpB,QAAQC,IAAI,kBAAoBkB,GAC5BA,EACFb,KAAKZ,OAAS,yBAEc,KAAxBY,KAAKV,MAAMX,UAA2C,KAAxBqB,KAAKV,MAAMX,SAC3CqB,KAAKZ,OAAS,gDAERY,KAAKP,oBACLO,KAAKK,QAGjB,I,UC5FJ,MAAMU,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://test-project/./src/components/register.vue","webpack://test-project/./src/components/register.vue?e122"],"sourcesContent":["<template>\r\n  <form name=\"register-form\" >\r\n    <div class=\"mb-3\">\r\n      <label for=\"username\">Username: </label>\r\n      <input type=\"text\" id=\"username\" v-model=\"input.username\" v-bind:required=\"rule.required\" v-bind:placeholder=\"rule.message\"/>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"password\">Password: </label>\r\n      <input type=\"password\" id=\"password\" v-model=\"input.password\" v-bind:required=\"rule.required\" v-bind:placeholder=\"rule.message\"/>\r\n    </div>\r\n    <button class=\"btn btn-outline-dark\" type=\"submit\" v-on:click.prevent=\"register\">\r\n      Register\r\n    </button>\r\n    <h3>Register Output: {{ this.output }}</h3>\r\n \r\n  </form>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\"; \r\nimport {SET_AUTHENTICATION, SET_USERNAME} from \"@/store/storeconstants\";\r\n\r\nexport default {\r\nname: \"register\",\r\n  data() {\r\n    return {\r\n      input: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      rule: {\r\n        required: true,\r\n        message: 'please input data'\r\n      },\r\n      output: \"\",\r\n    }\r\n  },\r\n  methods: {\r\n    registerApi(){\r\n      console.log(\"Register\");\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/login/CreateNewUser',\r\n        params: {\r\n          username: this.input.username,\r\n          password: this.input.password\r\n        }\r\n      }).then(function (response) {\r\n        console.log(response);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    },\r\n    login() {\r\n      //make sure username OR password are not empty\r\n      if (this.input.username !== \"\" || this.input.username !== \"\") {\r\n        this.output = \"Register complete\"\r\n        //stores true to the set_authentication and username to the set_username \r\n        this.$store.commit(`auth/${SET_AUTHENTICATION}`, true);\r\n        this.$store.commit(`auth/${SET_USERNAME}`, this.input.username);\r\n        this.output = \"Authentication complete.\"\r\n        this.$router.push('/home')\r\n      } else {\r\n        this.$store.commit(`auth/${SET_AUTHENTICATION}`, false);\r\n        this.output = \"Username and password can not be empty\"\r\n      }\r\n    },\r\n    async checkUserNameExist() {\r\n      return await axios({\r\n        method: 'post',\r\n        url: '/api/login/CheckUsernameExist',\r\n        params: {\r\n          username: this.input.username,\r\n        }\r\n      }).then(function (response) {\r\n        console.log(\"result in func \" + response.data);\r\n        return response.data;\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    },\r\n    async register() {\r\n      this.output = \"\";\r\n      let userNameExist = await this.checkUserNameExist()\r\n      console.log(\"userNameExist: \" + userNameExist);\r\n      if (userNameExist) {\r\n        this.output = \"Username already exist\"\r\n      } else {\r\n        if (this.input.username === \"\" || this.input.username === \"\") {\r\n          this.output = \"Username and password can not be empty\"\r\n        } else {\r\n          await this.registerApi();\r\n          await this.login();\r\n        }\r\n      }\r\n    },\r\n    \r\n    \r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./register.vue?vue&type=template&id=02c9a904\"\nimport script from \"./register.vue?vue&type=script&lang=js\"\nexport * from \"./register.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\RiderProjects\\\\vue-sample-project\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["name","class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","id","$data","username","required","placeholder","message","_hoisted_5","_hoisted_6","password","onClick","$options","output","data","input","rule","methods","registerApi","console","log","axios","method","url","params","this","then","response","catch","error","login","$store","commit","SET_AUTHENTICATION","SET_USERNAME","$router","push","async","userNameExist","checkUserNameExist","__exports__","render"],"sourceRoot":""}